version: '3.8'

services:
  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./redis/data:/data
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  api:
    build: files_uploader/.
    container_name: api
    restart: unless-stopped
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data/
    expose:
      - ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d files_database" ]
      interval: 5s
      timeout: 5s
      retries: 5
